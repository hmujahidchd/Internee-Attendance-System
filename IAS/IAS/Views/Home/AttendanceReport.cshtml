@model IAS.ViewModel.AttendanceReportModel
@{
    ViewBag.Title = "Attendance Report";
}

<h2 style="width:100%;display:block;text-align:center;">@((new DateTime(Model.Month.Year, Model.Month.Month,1)).ToString("MMMM, yyyy"))</h2>

<div class="container">
    <div class="row">
        <div class="col-sm restrict-to-40">
            <div class="row">
                <div class="col-sm">
                    <h2 class="row" style="width:100%;display:block;text-align:center;">Profile</h2>
                    <div style="font-size:16px;width:100%; text-align:left; padding:10px;">
                        <div class="row" style="margin:10px;"><div class="col">Name</div><div class="col">@Model.User.username</div></div>
                        <div class="row" style="margin:10px;"><div class="col">CNIC</div><div class="col">@Model.User.cnic</div></div>
                        <div class="row" style="margin:10px;"><div class="col">Supervisor</div><div class="col">@Model.Supervisor.username</div></div>
                    </div>
                </div>
                <div class="col-sm m-2" id="piechartContainer">
                    <div id="piechart"></div>
                </div>
            </div>
            <div class="row container-fluid">
                <a href="/home/GeneratePrintPreview?Year=@Model.Month.Year&Month=@Model.Month.Month" class="col-md btn btn-primary p-1 m-1">Print Preview</a>
                <a href="/home/GeneratePDF?Year=@Model.Month.Year&Month=@Model.Month.Month" class="col-md btn btn-primary p-1 m-1">Download PDF</a>
            </div>
        </div>
        <div class="col-sm">
            <table class="table table-hover">
                <tr>
                    <th style="width:fit-content;">Date</th>
                    <th>Day</th>
                    <th>Report</th>
                    <th>Leave</th>
                    <th>Status</th>
                    <th>Remarks</th>
                </tr>
                @foreach (var item in Model.Month.AttendanceSheet)
                {
                    if (item.reportDatetime.DayOfWeek == DayOfWeek.Sunday)
                    {
                        <tr class="avoid-clicks">
                            <td>@item.reportDatetime.ToString("dd-MM-yyyy")</td>
                            <td>@item.reportDatetime.ToString("dddd")</td>
                            <td colspan="4" style="background:rgb(128, 128, 128, 0.7);"></td>
                        </tr>
                    }
                    else if (item.statusid == (int)IAS.Helper_Class.Cls_Attendance.AttendanceStatus.Absent)
                    {
                        <tr class="highlight-red">
                            <td>@item.reportDatetime.ToString("dd-MM-yyyy")</td>
                            <td>@item.reportDatetime.ToString("dddd")</td>
                            <td colspan="4" style="text-align:center;">@(IAS.Helper_Class.Cls_Attendance.StatusString(item.statusid))</td>
                        </tr>
                    }
                    else if (item.statusid == (int)IAS.Helper_Class.Cls_Attendance.AttendanceStatus.Leave)
                    {
                        <tr class="highlight-red">
                            <td>@item.reportDatetime.ToString("dd-MM-yyyy")</td>
                            <td>@item.reportDatetime.ToString("dddd")</td>
                            <td colspan="4" style="text-align:center;">@(IAS.Helper_Class.Cls_Attendance.StatusString(item.statusid))</td>
                        </tr>
                    }
                    else if (item.statusid == (int)IAS.Helper_Class.Cls_Attendance.AttendanceStatus.Public_Holiday)
                    {
                        <tr>
                            <td>@item.reportDatetime.ToString("dd-MM-yyyy")</td>
                            <td>@item.reportDatetime.ToString("dddd")</td>
                            <td colspan="4" style="background:rgb(128 128 128); text-align:center;">@(IAS.Helper_Class.Cls_Attendance.StatusString(item.statusid))</td>
                        </tr>
                    }
                    else if (item.statusid == (int)IAS.Helper_Class.Cls_Attendance.AttendanceStatus.Present)
                    {
                        <tr>
                            <td>@item.reportDatetime.ToString("dd-MM-yyyy")</td>
                            <td>@item.reportDatetime.ToString("dddd")</td>
                            <td>@item.reportDatetime.ToString("hh:mm tt")</td>
                            <td>@item.leaveDatetime.ToString("hh:mm tt")</td>
                            <td>@(IAS.Helper_Class.Cls_Attendance.StatusString(item.statusid))</td>
                            <td>KPITB</td>
                        </tr>
                    }
                    else if (item.statusid == (int)IAS.Helper_Class.Cls_Attendance.AttendanceStatus.Unattempt)
                    {
                        <tr class="avoid-clicks">
                            <td>@item.reportDatetime.ToString("dd-MM-yyyy")</td>
                            <td>@item.reportDatetime.ToString("dddd")</td>
                            <td></td>
                            <td></td>
                            <td>@(IAS.Helper_Class.Cls_Attendance.StatusString(item.statusid))</td>
                            <td></td>
                        </tr>
                    }
                }
            </table>

        </div>
    </div>
</div>
@section scripts{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
    $(document).ready(function () {

        // Load google charts
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        // Draw the chart and set the chart values
        function drawChart() {
            var data = google.visualization.arrayToDataTable([
                ['Attendence', 'Days'],
                ['Present', @(Model.Month.Present)],
                ['absent', @(Model.Month.Absent)],
                ['Leave', @(Model.Month.Leaves)]
            ]);

            // Optional; add a title and set the width and height of the chart
            var options = { 'title':'@((new DateTime(Model.Month.Year, Model.Month.Month,1)).ToString("MMMM, yyyy"))', 'width': 400, 'height': 270 };

            // Display the chart inside the <div> element with id="piechart"
            var chart = new google.visualization.PieChart(document.getElementById('piechart'));
            chart.draw(data, options);
        }

    });
    </script>
    @if (Session["managerid"] != null || Session["supervisorid"] != null)
    {
        <script>
            var website = location.protocol + '//' + location.host;
            var date = new Date(); ;
            //mark attendance
            $("table tr").click(function () {
                var data = $(this).find("td:first-child").html();
                var dataArray = data.split("-");
                date = new Date(dataArray[2], (dataArray[1]-1), dataArray[0], 9, 30, 0);
                console.log(date);
                    var dialog = bootbox.dialog({
                        title: 'Attendance',
                        message: "<p>@Model.User.username status at office on " + data + "?</p>",
                        size: 'large',
                        buttons: {
                            Present: {
                                label: "Present",
                                className: 'btn-success',
                                callback: function () {
                                    MarkAttendance(2);
                                }
                            },
                            Absent: {
                                label: "Absent",
                                className: 'btn-warning',
                                callback: function () {
                                    MarkAttendance(1);
                                }
                            },
                            Leave: {
                                label: "Leave",
                                className: 'btn-info',
                                callback: function () {
                                    MarkAttendance(4);
                                }
                            },
                            Holiday: {
                                label: "Holiday",
                                className: 'btn-default',
                                callback: function () {
                                    MarkAttendance(3);
                                }
                            }
                        }
                    });
                });
                function MarkAttendance(id)
                {
                    var dialog = bootbox.dialog({
                        title: 'Please wait',
                        message: '<p><i class="fa fa-spin fa-spinner"></i> Saving..</p>'
                    });
                    var Data = new Object();
                    Data.interneeid = @((int)Session["interneeid"]);
                    Data.statusid = id;
                    Data.reportDatetime = date;
                    $.ajax({
                        type: "POST",
                        data: JSON.stringify(Data),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        url: website + "/api/attendance",
                    }).done(function (data, textStatus, xhr) {
                        // TO DO ON DONE
                        console.log(data);
                        // TO DO ON DONE
                    }).fail(function (data, textStatus, xhr) {
                        //This shows status code eg. 403
                        console.log("error", data.status);

                        bootbox.confirm({
                            message: "Sorry cannot cannot communicate with server. Reload this page may solve this issue. If this issue again and again, Please contact manager.<br/> Do you like to reload page?",
                            buttons: {
                                confirm: {
                                    label: 'Yes',
                                    className: 'btn-success'
                                },
                                cancel: {
                                    label: 'No',
                                    className: 'btn-danger'
                                }
                            },
                            callback: function (result) {
                                if (result) {
                                    location.reload();
                                }
                            }
                        });
                    }).always(function () {
                        //TO-DO after fail/done request.
                        dialog.init(function () {
                            setTimeout(function () {
                                location.reload();
                            }, 3000);
                        });
                        console.log("ended");
                    });
                };
        </script>
    }
}